package com.zhaniya.finalproject.commands;

import com.zhaniya.finalproject.model.pet.*;

import java.util.Random;

public class TalkCommand implements Command {
    private final Pet pet;
    private final Random random = new Random();

    public TalkCommand(Pet pet) {
        this.pet = pet;
    }

    @Override
    public void execute() {
        if (pet == null) {
            System.out.println("–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return;
        }

        String mood = pet.getMood();
        String phrase;

        if (pet.getState() instanceof SleepingState) {
            System.out.println(pet.getName() + " —Å–ø–∏—Ç... –Ω–µ –±—É–¥–µ–º –º–µ—à–∞—Ç—å. üò¥");
            return;
        }

        if (pet.getState() instanceof SickState) {
            phrase = randomFrom(new String[]{
                "–ú–Ω–µ –ø–ª–æ—Ö–æ... üò¢",
                "–ú–æ–∂–Ω–æ –æ–±–Ω–∏–º–∞—à–∫–∏?..",
                "–Ø –Ω–µ —Ö–æ—á—É –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å...",
                "–Ø –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª–µ—é..."
            });
        } else if (pet.getState() instanceof AngryState) {
            phrase = randomFrom(new String[]{
                "–Ø –∑–æ–ª! üò†",
                "–û—Å—Ç–∞–≤—å –º–µ–Ω—è –≤ –ø–æ–∫–æ–µ!",
                "–¢—ã –º–µ–Ω—è –æ–±–∏–¥–µ–ª...",
                "–Ø –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥–æ–≤–æ—Ä–∏—Ç—å."
            });
        } else if (pet.getState() instanceof TiredState) {
            phrase = randomFrom(new String[]{
                "–Ø —É—Å—Ç–∞–ª... üò¥",
                "–ú–æ–∂–Ω–æ —è –æ—Ç–¥–æ—Ö–Ω—É?",
                "–¢—ã –∫–ª–∞—Å—Å–Ω—ã–π, –Ω–æ —è —Ö–æ—á—É –ø–æ—Å–ø–∞—Ç—å...",
                "–¢–∞–∫ —Ö–æ—á–µ—Ç—Å—è –≤ –∫—Ä–æ–≤–∞—Ç–∫—É..."
            });
        } else if (pet.getState() instanceof HungryState) {
            phrase = randomFrom(new String[]{
                "–Ø –≥–æ–ª–æ–¥–µ–Ω... üòü",
                "–ü–æ–∫–æ—Ä–º–∏ –º–µ–Ω—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!",
                "–ñ–∏–≤–æ—Ç —É—Ä—á–∏—Ç...",
                "–ö–æ–≥–¥–∞ –æ–±–µ–¥?.."
            });
        } else {
            // Happy or neutral
            phrase = randomFrom(new String[]{
                "–Ø —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üêæ",
                "–¢—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –≤—ã–≥–ª—è–¥–∏—à—å!",
                "–û–±–Ω–∏–º–∞—à–∫–∏? üòΩ",
                "–ú–æ–∂–µ—à—å –ø–æ–≥–ª–∞–¥–∏—Ç—å –º–µ–Ω—è? üòä",
                "–Ø —Ç–µ–±—è –æ—á–µ–Ω—å –ª—é–±–ª—é!",
                "–° —Ç–æ–±–æ–π —Ç–∞–∫ —É—é—Ç–Ω–æ!",
                "–Ø –±—ã–ª —Ö–æ—Ä–æ—à–∏–º –ø–∏—Ç–æ–º—Ü–µ–º —Å–µ–≥–æ–¥–Ω—è?",
                "–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º!",
                "–¢—ã –º–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥!"
            });
        }

        System.out.println(pet.getName() + " –≥–æ–≤–æ—Ä–∏—Ç: \"" + phrase + "\"");

        // üé® –º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ—Ä–∞–∑—É –≤ UI
        // GameUI.showSpeechBubble(pet.getName(), phrase);
    }

    private String randomFrom(String[] options) {
        return options[random.nextInt(options.length)];
    }
}
