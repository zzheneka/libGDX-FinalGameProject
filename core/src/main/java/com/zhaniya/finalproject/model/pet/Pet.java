package com.zhaniya.finalproject.model.pet;

import com.zhaniya.finalproject.utils.TimerUtil;

public class Pet {
    private String name;
    private PetType type;
    private int energy;
    private int health;
    private PetState state;
    private String mood;
    private long lastFedTime;

    // üî• –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    private int intelligence;
    private int trustLevel;
    private int level;

    public Pet(String name, PetType type, PetState state) {
        this.name = name;
        this.type = type;
        this.state = state;
        this.energy = 100;
        this.health = 100;
        this.mood = (state != null) ? state.getMood() : "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π";
        this.lastFedTime = System.currentTimeMillis();
        this.intelligence = 0;
        this.trustLevel = 0;
        this.level = 1;

        TimerUtil.startPetTimer(this);
    }

    public void handleState() {
        if (energy < 30 && !isInState(TiredState.class)) {
            setState(new TiredState(this));
            System.out.println(name + " —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –£—Å—Ç–∞–ª.");
        }

        if (health < 30 && !isInState(SickState.class)) {
            setState(new SickState(this));
            System.out.println(name + " –∑–∞–±–æ–ª–µ–ª –∏–∑-–∑–∞ –ø–ª–æ—Ö–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è.");
        }

        if (state != null) {
            state.handle();
        }
    }

    public void setState(PetState newState) {
        if (this.state != null && this.state.getClass().equals(newState.getClass())) {
            return; // –£–∂–µ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–µ –º–µ–Ω—è–µ–º
        }
        this.state = newState;
        this.mood = newState.getMood();
        System.out.println(name + " –ø–µ—Ä–µ—à–µ–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: " + newState.getClass().getSimpleName());
    }

    public boolean isInState(Class<? extends PetState> stateClass) {
        return state != null && stateClass.isInstance(state);
    }

    public PetState getState() {
        return state;
    }

    public String getName() {
        return name;
    }

    public PetType getType() {
        return type;
    }

    public int getEnergy() {
        return energy;
    }

    public void setEnergy(int energy) {
        this.energy = Math.max(0, Math.min(100, energy));
    }

    public int getHealth() {
        return health;
    }

    public void setHealth(int health) {
        this.health = Math.max(0, Math.min(100, health));
    }

    public String getMood() {
        return mood != null ? mood : (state != null ? state.getMood() : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
    }

    public void setMood(String mood) {
        this.mood = mood;
    }

    public long getLastFedTime() {
        return lastFedTime;
    }

    public void updateLastFedTime() {
        this.lastFedTime = System.currentTimeMillis();
    }

    public int getIntelligence() {
        return intelligence;
    }

    public void increaseIntelligence(int amount) {
        this.intelligence = Math.min(100, intelligence + amount);
        checkLevelUp();
    }

    public int getTrustLevel() {
        return trustLevel;
    }

    public void increaseTrust(int amount) {
        this.trustLevel = Math.min(100, trustLevel + amount);
        checkLevelUp();
    }

    public int getLevel() {
        return level;
    }

    private void checkLevelUp() {
        if (intelligence >= 20 && trustLevel >= 20 && level == 1) {
            level = 2;
            System.out.println(name + " –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å –¥–æ 2! üéâ");
        } else if (intelligence >= 50 && trustLevel >= 50 && level == 2) {
            level = 3;
            System.out.println(name + " –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å –¥–æ 3! üåü");
        }
    }

    public void printStats() {
        System.out.println(name + " [" + type + "] - –≠–Ω–µ—Ä–≥–∏—è: " + energy +
            ", –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: " + getMood() + ", –ó–¥–æ—Ä–æ–≤—å–µ: " + health +
            ", –£—Ä–æ–≤–µ–Ω—å: " + level + ", –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: " + intelligence + ", –î–æ–≤–µ—Ä–∏–µ: " + trustLevel);
    }

    public void feed() {
        long currentTime = System.currentTimeMillis();
        if (currentTime - lastFedTime < 5000) {
            System.out.println(name + " –Ω–µ –≥–æ–ª–æ–¥–µ–Ω –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.");
            return;
        }

        energy = Math.min(100, energy + 20);
        health = Math.min(100, health + 10);
        updateLastFedTime();
        System.out.println(name + " –ø–æ–µ–ª! –≠–Ω–µ—Ä–≥–∏—è: " + energy + ", –ó–¥–æ—Ä–æ–≤—å–µ: " + health);
        handleState();
    }

    public void play() {
        if (energy < 10) {
            System.out.println(name + " —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª –¥–ª—è –∏–≥—Ä—ã.");
            return;
        }

        energy = Math.max(0, energy - 10);
        increaseTrust(5);
        increaseIntelligence(3);
        System.out.println(name + " –ø–æ–∏–≥—Ä–∞–ª —Å —Ç–æ–±–æ–π! –≠–Ω–µ—Ä–≥–∏—è: " + energy);
        handleState();
    }

    public void sleep() {
        if (energy >= 90) {
            System.out.println(name + " –Ω–µ —Ö–æ—á–µ—Ç —Å–ø–∞—Ç—å, –æ–Ω –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏!");
            return;
        }

        energy = Math.min(100, energy + 30);
        System.out.println(name + " –ø–æ—Å–ø–∞–ª –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–∏–ª—ã! –≠–Ω–µ—Ä–≥–∏—è: " + energy);
        handleState();
    }
}
